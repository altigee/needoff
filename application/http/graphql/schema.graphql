schema {
  query: Query
  mutation: Mutation
}

type Balance {
  id: ID!
  userId: Int!
  balanceType: String!
  amount: Int!
}

type CreateDayOff {
  ok: Boolean
  dayOff: DayOff
}

scalar DateTime

type DayOff {
  id: ID!
  userId: Int!
  approvedById: Int
  leaveType: String!
  user: User
  approvedBy: User
}

type Mutation {
  createDayOff(leaveType: String): CreateDayOff
}

type Profile {
  userId: ID!
  firstName: String!
  lastName: String!
  position: String!
  phone: String!
  email: String!
  user: User
}

type Query {
  userByName(username: String!): User
  myBalance: [Balance]
  balanceByUser(username: String!): [Balance]
  profile: Profile
}

type User {
  id: ID!
  username: String!
  createdTime: DateTime!
}
